{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ronit\\\\Desktop\\\\Insta-Clone\\\\frontend\\\\src\\\\components\\\\Createpost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Createpost.css\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Createpost() {\n  _s();\n  const [body, setBody] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Toast functions\n  const notifyA = msg => toast.error(msg);\n  const notifyB = msg => toast.success(msg);\n  useEffect(() => {\n    // saving post to mongodb\n    if (url) {\n      fetch(\"http://localhost:5000/createPost\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n        },\n        body: JSON.stringify({\n          body,\n          pic: url\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.error) {\n          notifyA(data.error);\n        } else {\n          notifyB(\"Successfully Posted\");\n          navigate(\"/\");\n        }\n      }).catch(err => console.log(err));\n    }\n  }, [url]);\n\n  // posting image to cloudinary\n  const postDetails = () => {\n    console.log(body, image);\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"insta-clone\");\n    data.append(\"cloud_name\", \"ronitjain24\");\n    fetch(\"https://api.cloudinary.com/v1_1/ronitjain24/image/upload\", {\n      method: \"post\",\n      body: data\n    }).then(res => res.json()).then(data => setUrl(data.url)).catch(err => console.log(err));\n    console.log(url);\n  };\n  const loadfile = event => {\n    var output = document.getElementById(\"output\");\n    output.src = URL.createObjectURL(event.target.files[0]);\n    output.onload = function () {\n      URL.revokeObjectURL(output.src); // free memory\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPost\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: \"3px auto\"\n        },\n        children: \"Create New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"post-btn\",\n        onClick: () => {\n          postDetails();\n        },\n        children: \"Share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"output\",\n        src: \"https://cdn4.iconfinder.com/data/icons/ionicons/512/icon-image-512.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: event => {\n          loadfile(event);\n          setImage(event.target.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-pic\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://images.unsplash.com/photo-1597589827317-4c6d6e0a90bd?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8c3F1YXJlfGVufDB8fDB8fHww&auto=format&fit=crop&w=1000&q=60\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Ronit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: body,\n        onChange: e => {\n          setBody(e.target.value);\n        },\n        type: \"text\",\n        placeholder: \"Write a caption....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Createpost, \"x/4qi6m2IPurC8m4BJbzevG+Dc8=\", false, function () {\n  return [useNavigate];\n});\n_c = Createpost;\nvar _c;\n$RefreshReg$(_c, \"Createpost\");","map":{"version":3,"names":["React","useState","useEffect","toast","useNavigate","jsxDEV","_jsxDEV","Createpost","_s","body","setBody","image","setImage","url","setUrl","navigate","notifyA","msg","error","notifyB","success","fetch","method","headers","Authorization","localStorage","getItem","JSON","stringify","pic","then","res","json","data","catch","err","console","log","postDetails","FormData","append","loadfile","event","output","document","getElementById","src","URL","createObjectURL","target","files","onload","revokeObjectURL","className","children","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","alt","type","accept","onChange","value","e","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/ronit/Desktop/Insta-Clone/frontend/src/components/Createpost.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Createpost.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Createpost() {\r\n  const [body, setBody] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  // Toast functions\r\n  const notifyA = (msg) => toast.error(msg);\r\n  const notifyB = (msg) => toast.success(msg);\r\n\r\n  useEffect(() => {\r\n    // saving post to mongodb\r\n    if (url) {\r\n      fetch(\"http://localhost:5000/createPost\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        },\r\n        body: JSON.stringify({\r\n          body,\r\n          pic: url,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.error) {\r\n            notifyA(data.error);\r\n          } else {\r\n            notifyB(\"Successfully Posted\");\r\n            navigate(\"/\");\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [url]);\r\n\r\n  // posting image to cloudinary\r\n  const postDetails = () => {\r\n    console.log(body, image);\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"insta-clone\");\r\n    data.append(\"cloud_name\", \"ronitjain24\");\r\n    fetch(\"https://api.cloudinary.com/v1_1/ronitjain24/image/upload\", {\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setUrl(data.url))\r\n      .catch((err) => console.log(err));\r\n    console.log(url);\r\n  };\r\n\r\n  const loadfile = (event) => {\r\n    var output = document.getElementById(\"output\");\r\n    output.src = URL.createObjectURL(event.target.files[0]);\r\n    output.onload = function () {\r\n      URL.revokeObjectURL(output.src); // free memory\r\n    };\r\n  };\r\n  return (\r\n    <div className=\"createPost\">\r\n      {/* //header */}\r\n      <div className=\"post-header\">\r\n        <h4 style={{ margin: \"3px auto\" }}>Create New Post</h4>\r\n        <button\r\n          id=\"post-btn\"\r\n          onClick={() => {\r\n            postDetails();\r\n          }}\r\n        >\r\n          Share\r\n        </button>\r\n      </div>\r\n      {/* image preview */}\r\n      <div className=\"main-div\">\r\n        <img\r\n          id=\"output\"\r\n          src=\"https://cdn4.iconfinder.com/data/icons/ionicons/512/icon-image-512.png\" alt=\"\"\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={(event) => {\r\n            loadfile(event);\r\n            setImage(event.target.files[0]);\r\n          }}\r\n        />\r\n      </div>\r\n      {/* details */}\r\n      <div className=\"details\">\r\n        <div className=\"card-header\">\r\n          <div className=\"card-pic\">\r\n            <img\r\n              src=\"https://images.unsplash.com/photo-1597589827317-4c6d6e0a90bd?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8c3F1YXJlfGVufDB8fDB8fHww&auto=format&fit=crop&w=1000&q=60\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <h5>Ronit</h5>\r\n        </div>\r\n        <textarea\r\n          value={body}\r\n          onChange={(e) => {\r\n            setBody(e.target.value);\r\n          }}\r\n          type=\"text\"\r\n          placeholder=\"Write a caption....\"\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}